"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[56816],{49613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>s});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),h=o,s=d["".concat(c,".").concat(h)]||d[h]||m[h]||a;return n?r.createElement(s,i(i({ref:t},u),{},{components:n})):r.createElement(s,i({ref:t},u))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},28128:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(59496);class o extends r.Component{render(){return r.createElement("div",{className:"code-header"},r.createElement("div",null,r.createElement("h5",null,this.props.children)))}}const a=o},29206:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>d});n(59496);var r=n(49613),o=n(28128);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={id:"modifying-generated-behavior",title:"Modifying Generated Behavior",sidebar_label:"Modifying Generated Behavior"},c=void 0,p={unversionedId:"development/touchgfx-hal-development/generator-how-to/modifying-generated-behavior",id:"development/touchgfx-hal-development/generator-how-to/modifying-generated-behavior",title:"Modifying Generated Behavior",description:"\uc0dd\uc131\ub41c \ucf54\ub4dc\uc758 \uad6c\uc870\uc640 \uac1c\ubc1c\uc790\uac00 \uc774\ub97c \uc0ac\uc6a9\ud574 \uad6c\uc131\uc744 \ub9de\ucda4\ud654\ud558\ub294 \ubc29\ubc95\uc744 \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4.",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/development/touchgfx-hal-development/generator-how-to/modifying-generated-behavior.mdx",sourceDirName:"development/touchgfx-hal-development/generator-how-to",slug:"/development/touchgfx-hal-development/generator-how-to/modifying-generated-behavior",permalink:"/4.25/ko/docs/development/touchgfx-hal-development/generator-how-to/modifying-generated-behavior",draft:!1,tags:[],version:"current",frontMatter:{id:"modifying-generated-behavior",title:"Modifying Generated Behavior",sidebar_label:"Modifying Generated Behavior"},sidebar:"docs",previous:{title:"Generating Code",permalink:"/4.25/ko/docs/development/touchgfx-hal-development/generator-how-to/generating-code"},next:{title:"TouchGFX Designer Project",permalink:"/4.25/ko/docs/development/touchgfx-hal-development/generator-how-to/touchgfx-designer-project"}},u={},d=[{value:"HAL\uc758 \ub3d9\uc791 \ud655\uc7a5",id:"hal\uc758-\ub3d9\uc791-\ud655\uc7a5",level:2},{value:"HAL \uad6c\uc131 \uc7ac\uc815\uc758",id:"hal-\uad6c\uc131-\uc7ac\uc815\uc758",level:2}],m={toc:d},h="wrapper";function s(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)(h,a({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\uc0dd\uc131\ub41c \ucf54\ub4dc\uc758 \uad6c\uc870\uc640 \uac1c\ubc1c\uc790\uac00 \uc774\ub97c \uc0ac\uc6a9\ud574 \uad6c\uc131\uc744 \ub9de\ucda4\ud654\ud558\ub294 \ubc29\ubc95\uc744 \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4."),(0,r.kt)("p",null,"STM32CubeMX\uc5d0\uc11c \uc0dd\uc131\ub41c \ud30c\uc77c\uc5d0 \uc791\uc131\ub41c \uc0ac\uc6a9\uc790 \ucf54\ub4dc\ub294 STM32CubeMX\uc5d0\uc11c \uc0dd\uc131\ub41c \ucf54\ub4dc(C \ucf54\ub4dc)\ub97c \uc804\ubc18\uc5d0 \uc804\ub7b5\uc801\uc73c\ub85c \ubc30\uce58\ub41c ",(0,r.kt)("strong",{parentName:"p"},"User Code")," \uc139\uc158\uc744 \uc0ac\uc6a9\ud574 \ubcf4\ud638\uac00 \ub429\ub2c8\ub2e4.\xa0TouchGFX Generator\uc5d0\uc11c \uc0dd\uc131\ub41c \ucf54\ub4dc(C++ \ucf54\ub4dc)\uc5d0\uc11c \uc774\ub7ec\ud55c \uc720\uc5f0\uc131\uc740 ",(0,r.kt)("a",a({parentName:"p"},{href:"../touchgfx-architecture#abstraction-layer-classes"}),"AL \uc544\ud0a4\ud14d\ucc98"),"\uc5d0 \uc124\uba85\ub41c \ub300\ub85c \uc0c1\uc18d\uc744 \ud1b5\ud574 \ub2ec\uc131\ub429\ub2c8\ub2e4."),(0,r.kt)("p",null,"TouchGFX Generator\ub294 ",(0,r.kt)("em",{parentName:"p"},"TouchGFX/target")," \ud3f4\ub354\uc5d0 \uc218\uc815 \uac00\ub2a5\ud55c \uc0ac\uc6a9\uc790 \ud074\ub798\uc2a4\ub97c ",(0,r.kt)("a",a({parentName:"p"},{href:"generating-code#generated-project"}),"\uc0dd\uc131"),"\ud558\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\uc790\ub294 HAL\uc758 \ub3d9\uc791\uacfc HAL \uad6c\uc131\uc758 \uc7ac\uc815\uc758 \uae30\ub2a5\uc744 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\uc77c\uc758 \ub0b4\uc6a9\uc740 STM32CubeMX\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucc98\uc74c\uc73c\ub85c \ucf54\ub4dc\ub97c \uc0dd\uc131\ud560 \ub54c\ub9cc \ub531 \ud55c \ubc88 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc218\uc815 \uac00\ub2a5\ud55c \ud074\ub798\uc2a4\uc5d0 \ucd94\uac00\ub41c \uc0ac\uc6a9\uc790 \ucf58\ud150\uce20\ub294 \ucf54\ub4dc\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud560 \ub54c STM32CubeMX\uac00 \ub36e\uc5b4\uc4f0\uc9c0 \uc54a\ub3c4\ub85d \ubcf4\ud638\uac00 \ub429\ub2c8\ub2e4."),(0,r.kt)("h2",a({},{id:"hal\uc758-\ub3d9\uc791-\ud655\uc7a5"}),"HAL\uc758 \ub3d9\uc791 \ud655\uc7a5"),(0,r.kt)("p",null,"\uc77c\ubd80 \ub4dc\ub77c\uc774\ubc84\uc758 \uacbd\uc6b0 \ud558\ub4dc\uc6e8\uc5b4\uc5d0 \ub530\ub77c TouchGFX Generator\uac00 \uc644\uc804\ud788 \uc791\ub3d9\ud558\ub294 HAL\uc744 \uc0dd\uc131\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. TouchGFX Generator\ub294 TouchGFX \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \uc0c1\uc18d\ub418\uace0, \ud2b9\uc815 \uae30\ub2a5\uc744 \uc5bb\uae30 \uc704\ud574 \uac1c\ubc1c\uc790\uac00 \ubc18\ub4dc\uc2dc \uad6c\ud604\ud574\uc57c \ud558\ub294 \ube48 \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \uc218\uc815 \uac00\ub2a5\ud55c \uc0ac\uc6a9\uc790 \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud074\ub798\uc2a4\uc5d0\ub294 \ub2e4\uc74c\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"STM32TouchController.cpp")," - \ud130\uce58 \ucee8\ud2b8\ub864\ub7ec\uc758 \ub3d9\uc791\uc744 \uc815\uc758\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFXGPIO.cpp")," - \uc131\ub2a5 \uce21\uc815\uc744 \uc704\ud574 \uc2e0\ud638\ub97c GPIO\uc5d0 \ub178\ucd9c\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OSWrappers.cpp")," - OSA\uc744 \uc815\uc758\ud569\ub2c8\ub2e4(TouchGFX Generator\uc5d0\uc11c ",(0,r.kt)("em",{parentName:"li"},"Custom")," RTOS\uac00 \uc120\ud0dd\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc0dd\uc131)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFXDMA.cpp")," - \ub9de\ucda4\ud615 DMA2D\uc758 \ub3d9\uc791\uc744 \uc815\uc758\ud569\ub2c8\ub2e4(TouchGFX Generator\uc5d0\uc11c ",(0,r.kt)("em",{parentName:"li"},"Custom")," \ud558\ub4dc\uc6e8\uc5b4 \uac00\uc18d\uc774 \uc120\ud0dd\ub41c \uacbd\uc6b0\uc5d0\ub9cc \uc0dd\uc131)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TouchGFXDataReader.cpp")," - Data Reader \uc778\ud130\ud398\uc774\uc2a4\uc758 \ub3d9\uc791\uc744 \uc815\uc758\ud569\ub2c8\ub2e4(TouchGFX Generator\uc5d0\uc11c ",(0,r.kt)("em",{parentName:"li"},"External Data Reader"),"\uac00 \ud65c\uc131\ud654 \ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc0dd\uc131).")),(0,r.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uacfc \uac19\uc774 ",(0,r.kt)("inlineCode",{parentName:"p"},"sampleTouch()"),"\uc758 \ube48 \uc815\uc758\ub294 \uac1c\ubc1c\uc790\uac00 \uad6c\ud604\ud560 ",(0,r.kt)("inlineCode",{parentName:"p"},"STM32TouchController.cpp"),"\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)(o.Z,{mdxType:"CodeHeader"},"STM32TouchController.cpp"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-cpp"}),"bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)\n{\n    /**\n     * By default sampleTouch returns false,\n     * return true if a touch has been detected, otherwise false.\n     *\n     * Coordinates are passed to the caller by reference by x and y.\n     *\n     * This function is called by the TouchGFX framework.\n     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);\n     *\n     */\n    return false;\n}\n")),(0,r.kt)("h2",a({},{id:"hal-\uad6c\uc131-\uc7ac\uc815\uc758"}),"HAL \uad6c\uc131 \uc7ac\uc815\uc758"),(0,r.kt)("p",null,"HAL\uc758 \ud074\ub798\uc2a4 \uacc4\uce35\uc73c\ub85c \uc778\ud574 \uc0ac\uc6a9\uc790\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXHAL.cpp")," \ub0b4\ubd80\uc758 STM32CubeMX\uc5d0\uc11c \uc0dd\uc131\ub41c HAL \uad6c\uc131 \ub610\ub294 \ub3d9\uc791\uc744 \uc7ac\uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uc544\ub798 \uc608\uc81c\uc5d0\uc11c \uac1c\ubc1c\uc790\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"initialize()")," \uba54\uc11c\ub4dc\ub97c \uc218\uc815\ud574\uc11c TouchGFX\ub97c \ucd94\uac00\ub85c \uad6c\uc131\ud558\uac70\ub098, ",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXGeneratedHAL"),"\uc5d0\uc11c \uae30\uc874 \uad6c\uc131 \uc138\ud2b8\ub97c \uc218\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)(o.Z,{mdxType:"CodeHeader"},"TouchGFXHAL.cpp"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-cpp",metastring:"{11-14}","{11-14}":!0}),"void TouchGFXHAL::initialize()\n{\n    // Calling parent implementation of initialize().\n    //\n    // To overwrite the generated implementation, omit call to parent function\n    // and implemented needed functionality here.\n    // Please note, HAL::initialize() must be called to initialize the framework.\n\n    TouchGFXGeneratedHAL::initialize();\n\n    //Overriding configurations\n    hal.lockDMAToFrontPorch(true);\n    hal.setFingerSize(4);\n    hal...\n}\n")))}s.isMDXComponent=!0}}]);
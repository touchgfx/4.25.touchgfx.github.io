"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[33300],{49613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var i=n(59496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return n?i.createElement(h,o(o({ref:t},c),{},{components:n})):i.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},28128:(e,t,n)=>{n.d(t,{Z:()=>a});var i=n(59496);class r extends i.Component{render(){return i.createElement("div",{className:"code-header"},i.createElement("div",null,i.createElement("h5",null,this.props.children)))}}const a=r},89639:(e,t,n)=>{n.d(t,{Z:()=>a});var i=n(59496),r=n(97395);const a=function(e){const t=e.noShadow||!1,n=e.width,a=e.height,o=(0,r.Z)(e.imageSource);return t?i.createElement("div",{className:"figure noshadow"},i.createElement("a",{href:o,target:"_blank"},i.createElement("img",{width:n,height:a,src:o})),i.createElement("p",null,e.children)):i.createElement("div",{className:"figure"},i.createElement("a",{href:o,target:"_blank"},i.createElement("img",{width:n,height:a,src:o})),i.createElement("p",null,e.children))}},48753:(e,t,n)=>{n.d(t,{Z:()=>l});var i=n(59496),r=n(96151);const a=i.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},i.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}));class o extends i.Component{render(){return i.createElement(r.Z,{color:"var(--highlight-color-further-reading)",header:"Further reading",type:"further-reading",icon:a},this.props.children)}}const l=o},96151:(e,t,n)=>{n.d(t,{Z:()=>a});var i=n(59496);class r extends i.Component{render(){const e=`highlight highlight-${this.props.type}`;return i.createElement("div",{className:e},i.createElement("div",{className:"highlight-heading"},i.createElement("h5",null,i.createElement("div",{className:"highlight-icon"},this.props.icon),this.props.header)),i.createElement("div",{className:"highlight-content"},this.props.children))}}const a=r},94790:(e,t,n)=>{n.d(t,{Z:()=>a});var i=n(59496);class r extends i.Component{render(){return i.createElement("code",null,this.props.children)}}const a=r},21100:(e,t,n)=>{n.d(t,{Z:()=>l});var i=n(59496),r=n(96151);const a=i.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},i.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}));class o extends i.Component{render(){return i.createElement(r.Z,{color:"var(--highlight-color-tip)",header:"Tip",type:"tip",icon:a},this.props.children)}}const l=o},93910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>m,default:()=>v,frontMatter:()=>u,metadata:()=>h,toc:()=>y});n(59496);var i=n(49613),r=n(89639),a=n(48753),o=n(21100),l=n(94790),s=n(18399),d=n(28128);function c(){return c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},c.apply(this,arguments)}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const u={id:"list-layout",title:"List Layout"},m=void 0,h={unversionedId:"development/ui-development/ui-components/containers/list-layout",id:"development/ui-development/ui-components/containers/list-layout",title:"List Layout",description:"The List Layout widget is a Container which automatically arranges its children in a list in a given direction. Adding and removing widgets from the List Layout rearranges the children.",source:"@site/docs/development/ui-development/ui-components/containers/list-layout.mdx",sourceDirName:"development/ui-development/ui-components/containers",slug:"/development/ui-development/ui-components/containers/list-layout",permalink:"/4.25/docs/development/ui-development/ui-components/containers/list-layout",draft:!1,tags:[],version:"current",frontMatter:{id:"list-layout",title:"List Layout"},sidebar:"docs",previous:{title:"Swipe Container",permalink:"/4.25/docs/development/ui-development/ui-components/containers/swipe-container"},next:{title:"Modal Window",permalink:"/4.25/docs/development/ui-development/ui-components/containers/modal-window"}},g={},y=[{value:"Widget Group",id:"widget-group",level:2},{value:"Properties",id:"properties",level:2},{value:"Interactions",id:"interactions",level:2},{value:"Actions",id:"actions",level:3},{value:"Triggers",id:"triggers",level:3},{value:"Performance",id:"performance",level:2},{value:"Size of the List Layout",id:"size-of-listlayout",level:2},{value:"Examples",id:"examples",level:2},{value:"Generated Code",id:"generated-code",level:3},{value:"User Code",id:"user-code",level:3},{value:"TouchGFX Designer Examples",id:"touchgfx-designer-examples",level:3},{value:"API Reference",id:"api-reference",level:2}],k={toc:y},f="wrapper";function v(e){var{components:t}=e,n=p(e,["components"]);return(0,i.kt)(f,c({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The List Layout widget is a ",(0,i.kt)("a",c({parentName:"p"},{href:"container"}),"Container")," which automatically arranges its children in a list in a given direction. Adding and removing widgets from the List Layout rearranges the children."),(0,i.kt)(r.Z,{imageSource:"/img/development/ui-development/ui-components/list-layout/widget-appearance.webp",mdxType:"Figure"},"List Layout running in the simulator"),(0,i.kt)("h2",c({},{id:"widget-group"}),"Widget Group"),(0,i.kt)("p",null,"The List Layout can be found in the Containers widget group in TouchGFX Designer."),(0,i.kt)(r.Z,{imageSource:"/img/development/ui-development/ui-components/list-layout/widget-group-v4.17.webp",mdxType:"Figure"},"List Layout in TouchGFX Designer"),(0,i.kt)("h2",c({},{id:"properties"}),"Properties"),(0,i.kt)("p",null,"The properties for a List Layout in TouchGFX Designer."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"th"},"Property Group")),(0,i.kt)("th",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"th"},"Property Descriptions")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"td"},"Name")),(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("em",{parentName:"td"},"Name")," of the widget. ",(0,i.kt)("em",{parentName:"td"},"Name is the unique identifier used in TouchGFX Designer and code."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"td"},"Location")),(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("em",{parentName:"td"},"X")," and ",(0,i.kt)("em",{parentName:"td"},"Y")," specify the top left corner of the widget relative to its parent.",(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("em",{parentName:"td"},"W")," and ",(0,i.kt)("em",{parentName:"td"},"H")," specify the width and height of the widget. The size of the List Layout amounts to the total size of its children.",(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("em",{parentName:"td"},"Lock")," specifies if the widget should be locked in its current X, Y, W and H.",(0,i.kt)("br",null),(0,i.kt)("em",{parentName:"td"},"Locking the widget also disables interacting with the widget through the screen."),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("em",{parentName:"td"},"Visible")," specifies the visibility of the widget. ",(0,i.kt)("em",{parentName:"td"},"Making the widget invisible also disables interacting with the widget through the screen."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"td"},"Direction")),(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("em",{parentName:"td"},"Direction")," specifies the direction of the layout arrangement. Choose between a horizontal layout in the east (right) direction or vertical layout in the south (down) direction.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"td"},"Mixins")),(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("em",{parentName:"td"},"Draggable")," specifies if the widget is draggable at runtime.",(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("em",{parentName:"td"},"ClickListener")," specifies if the widget emits a callback when clicked.",(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("em",{parentName:"td"},"MoveAnimator")," specifies if the widget can animate changes to ",(0,i.kt)("em",{parentName:"td"},"X")," and ",(0,i.kt)("em",{parentName:"td"},"Y")," values.")))),(0,i.kt)("h2",c({},{id:"interactions"}),"Interactions"),(0,i.kt)("p",null,"The actions and triggers supported by a List Layout in TouchGFX Designer."),(0,i.kt)("h3",c({},{id:"actions"}),"Actions"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"th"},"Standard widget action")),(0,i.kt)("th",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"th"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"td"},"Move widget")),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"Move a widget to a new position over time.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"td"},"Hide widget")),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"Hides a widget (sets visibility to false).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),(0,i.kt)("strong",{parentName:"td"},"Show widget")),(0,i.kt)("td",c({parentName:"tr"},{align:null}),"Make a hidden widget visible (sets visibility to true).")))),(0,i.kt)("h3",c({},{id:"triggers"}),"Triggers"),(0,i.kt)("p",null,"A List Layout does not emit any triggers."),(0,i.kt)("h2",c({},{id:"performance"}),"Performance"),(0,i.kt)("p",null,"A List Layout itself does not have any notable impact on performance and is almost entirely dependent on its children. Therefore, the List Layout is considered a very fast widget on most platforms."),(0,i.kt)("p",null,"For more general details on drawing performance, read the ",(0,i.kt)("a",c({parentName:"p"},{href:"../general-ui-component-performance"}),"General UI Component Performance")," section."),(0,i.kt)("h2",c({},{id:"size-of-listlayout"}),"Size of the List Layout"),(0,i.kt)("p",null,"When a List Layout is inserted in TouchGFX Designer, the size is set\nto 250 x 250 pixels.",(0,i.kt)("br",{parentName:"p"}),"\n","If you add any Widgets to the List Layout in TouchGFX Designer the size of the\nList Layout is adjusted to fit the children on both width and height."),(0,i.kt)("p",null,"If you don't add any children in TouchGFX Designer but only in code, the\nList Layout does not remove the initial space created by TouchGFX Designer."),(0,i.kt)("p",null,"Here is an example in TouchGFX Designer where we have added a\nList Layout. We have a yellow Box in the background, and a white Box just\nbehind the List Layout to shows it's area:"),(0,i.kt)(r.Z,{imageSource:"/img/development/ui-development/ui-components/list-layout/designer-example.png",mdxType:"Figure"},"List Layout in TouchGFX Designer."),(0,i.kt)("p",null,"We have not added any children to the List Layout, so the size is the default 250 x 250 pixels."),(0,i.kt)("p",null,"We will add three TextAreas in the user code using the following:"),(0,i.kt)(d.Z,{mdxType:"CodeHeader"},"Screen1View.cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",c({parentName:"pre"},{className:"language-cpp",metastring:"{8-8}","{8-8}":!0}),"#include <gui/screen1_screen/Screen1View.hpp>\n#include <texts/TextKeysAndLanguages.hpp>\n#include <touchgfx/Color.hpp>\n\nvoid Screen1View::setupScreen()\n{\n    Screen1ViewBase::setupScreen();\n    //listLayout1.setWidthHeight(0, 0); // Remove excess space in List Layout\n    for (int i=0; i < 3; i++)\n    {\n        TextArea *textArea = new TextArea();\n        textArea->setWidthHeight(100, 25);\n        textArea->setTypedText(touchgfx::TypedText(T_RESOURCEID1));\n        listLayout1.add(*textArea);\n    }\n    listBackground.setWidthHeight(listLayout1);\n}\n")),(0,i.kt)("p",null,"The last line makes the white Box the same size as the List Layout\n(after adding the new children). The application looks like this:"),(0,i.kt)(r.Z,{imageSource:"/img/development/ui-development/ui-components/list-layout/demo-1.png",mdxType:"Figure"},"List Layout example."),(0,i.kt)("p",null,"We see that the List Layout is higher than the 3 children. It is exactly 375 pixels high and 250 pixels wide."),(0,i.kt)("p",null,"If we uncomment line 8 in the setupScreen() function we get instead the below image:"),(0,i.kt)(r.Z,{imageSource:"/img/development/ui-development/ui-components/list-layout/demo-2.png",mdxType:"Figure"},"List Layout example."),(0,i.kt)("h2",c({},{id:"examples"}),"Examples"),(0,i.kt)("h3",c({},{id:"generated-code"}),"Generated Code"),(0,i.kt)("p",null,"In the generated code for the View base class we can see how TouchGFX Designer sets up a List Layout."),(0,i.kt)(d.Z,{mdxType:"CodeHeader"},"Screen1ViewBase.cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",c({parentName:"pre"},{className:"language-cpp"}),"#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>\n#include <touchgfx/Color.hpp>\n\nScreen1ViewBase::Screen1ViewBase()\n{\n    listLayout1.setDirection(touchgfx::SOUTH);\n    listLayout1.setXY(90, 111);\n\n    box1.setWidth(50);\n    box1.setHeight(50);\n    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));\n    listLayout1.add(box1);\n\n    add(listLayout1);\n}\n")),(0,i.kt)(o.Z,{mdxType:"Tip"},"You can use these functions and the others available in the ListLayout class in user code. Remember to force a redraw by calling ",(0,i.kt)(l.Z,{mdxType:"InlineCode"},"listLayout1.invalidate()")," if you change the appearance of the widget."),(0,i.kt)("h3",c({},{id:"user-code"}),"User Code"),(0,i.kt)("p",null,"Here is an example on how to access the data of a custom container within a list."),(0,i.kt)("pre",null,(0,i.kt)("code",c({parentName:"pre"},{className:"language-cpp"}),"Drawable * next = (listLayout1.getFirstChild());\nTypedText* containerText;\nMyCustomContainer* current;\nwhile (next != NULL)\n{\n    current = (MyCustomContainer*) next;\n    containerText = current->myContainerFunction();\n    doMyfunction(containerText);\n    next = next->getNextSibling();\n}\n")),(0,i.kt)("h3",c({},{id:"touchgfx-designer-examples"}),"TouchGFX Designer Examples"),(0,i.kt)("p",null,"To further explore the List Layout, try creating a new application within TouchGFX Designer with one of the following UI templates:"),(0,i.kt)(r.Z,{imageSource:"/img/development/ui-development/ui-templates/list-layout-example-v4.17.webp",mdxType:"Figure"},"List Layout Example UI template in TouchGFX Designer"),(0,i.kt)("h2",c({},{id:"api-reference"}),"API Reference"),(0,i.kt)(a.Z,{mdxType:"FurtherReading"},(0,i.kt)("li",null,(0,i.kt)(s.Z,{to:"../../../../api/classes/classtouchgfx_1_1_list_layout",mdxType:"Link"},"API reference for the ListLayout class"))))}v.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[72948],{49613:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var r=a(59496);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var c=r.createContext({}),u=function(t){var e=r.useContext(c),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},s="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},h=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,c=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),s=u(a),h=n,k=s["".concat(c,".").concat(h)]||s[h]||p[h]||i;return a?r.createElement(k,l(l({ref:e},d),{},{components:a})):r.createElement(k,l({ref:e},d))}));function k(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=h;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o[s]="string"==typeof t?t:n,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},75303:(t,e,a)=>{a.d(e,{Z:()=>i});var r=a(59496);class n extends r.Component{render(){const t=/.*#(.*)/.exec(this.props.url)[1];return r.createElement("a",{"aria-hidden":"true",tabindex:"-1",class:"anchor enhancedAnchor_node_modules-@docusaurus-theme-classic-src-theme-Heading-",id:t})}}const i=n},42874:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>u,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>p});a(59496);var r=a(49613),n=a(95375),i=a(75303);function l(){return l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t},l.apply(this,arguments)}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}const c={title:"TextureSurface"},u=void 0,d={unversionedId:"api/classes/structtouchgfx_1_1_texture_surface",id:"api/classes/structtouchgfx_1_1_texture_surface",title:"TextureSurface",description:"touchgfx/hal/Types.hpp",source:"@site/docs/api/classes/structtouchgfx_1_1_texture_surface.mdx",sourceDirName:"api/classes",slug:"/api/classes/structtouchgfx_1_1_texture_surface",permalink:"/4.25/ja/docs/api/classes/structtouchgfx_1_1_texture_surface",draft:!1,tags:[],version:"current",frontMatter:{title:"TextureSurface"},sidebar:"api",previous:{title:"TextureMapper",permalink:"/4.25/ja/docs/api/classes/classtouchgfx_1_1_texture_mapper"},next:{title:"TiledImage",permalink:"/4.25/ja/docs/api/classes/classtouchgfx_1_1_tiled_image"}},s={},p=[{value:"Public Attributes",id:"public-attributes",level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",level:2},{value:"data",id:"data",level:3},{value:"extraData",id:"extradata",level:3},{value:"height",id:"height",level:3},{value:"stride",id:"stride",level:3},{value:"width",id:"width",level:3}],h={toc:p},k="wrapper";function m(t){var{components:e}=t,a=o(t,["components"]);return(0,r.kt)(k,l({},h,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"touchgfx/hal/Types.hpp")),(0,r.kt)("p",null," A texture source.\nContains a pointer to the data and the width and height of the texture. The alpha channel is used in 565 rendering with alpha. The stride is the width used when moving to the next line of the texture. "),(0,r.kt)("h2",l({},{id:"public-attributes"}),"Public Attributes"),(0,r.kt)("div",{class:"function-table",markdown:"1"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",l({parentName:"tr"},{align:"right"})),(0,r.kt)("th",l({parentName:"tr"},{align:null})))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"}),"const uint16_t *"),(0,r.kt)("td",l({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},(0,r.kt)(n.Z,{to:"structtouchgfx_1_1_texture_surface#variable-data",mdxType:"Link"},"data")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}),"The pixel bits or indexes for color in CLUT entries.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"}),"const uint8_t *"),(0,r.kt)("td",l({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},(0,r.kt)(n.Z,{to:"structtouchgfx_1_1_texture_surface#variable-extradata",mdxType:"Link"},"extraData")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}),"The alpha channel or clut data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"}),"int32_t"),(0,r.kt)("td",l({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},(0,r.kt)(n.Z,{to:"structtouchgfx_1_1_texture_surface#variable-height",mdxType:"Link"},"height")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}),"The height.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"}),"int32_t"),(0,r.kt)("td",l({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},(0,r.kt)(n.Z,{to:"structtouchgfx_1_1_texture_surface#variable-stride",mdxType:"Link"},"stride")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}),"The stride.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"}),"int32_t"),(0,r.kt)("td",l({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},(0,r.kt)(n.Z,{to:"structtouchgfx_1_1_texture_surface#variable-width",mdxType:"Link"},"width")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null}),"The width.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",l({parentName:"tr"},{align:"right"})),(0,r.kt)("td",l({parentName:"tr"},{align:null})))))),(0,r.kt)("h2",l({},{id:"public-attributes-documentation"}),"Public Attributes Documentation"),(0,r.kt)(i.Z,{url:"structtouchgfx_1_1_texture_surface#variable-data",mdxType:"DoxybookHeaderLink"}),(0,r.kt)("h3",l({},{id:"data"}),"data"),(0,r.kt)("div",{class:"api-container",markdown:"1"},(0,r.kt)("div",{class:"api-container-header api-container-header-variable",markdown:"1"},(0,r.kt)("p",null,"const uint16_t * data ")),(0,r.kt)("div",{class:"api-container-content",markdown:"1"},(0,r.kt)("p",null,"The pixel bits or indexes for color in CLUT entries. "))),(0,r.kt)(i.Z,{url:"structtouchgfx_1_1_texture_surface#variable-extradata",mdxType:"DoxybookHeaderLink"}),(0,r.kt)("h3",l({},{id:"extradata"}),"extraData"),(0,r.kt)("div",{class:"api-container",markdown:"1"},(0,r.kt)("div",{class:"api-container-header api-container-header-variable",markdown:"1"},(0,r.kt)("p",null,"const uint8_t * extraData ")),(0,r.kt)("div",{class:"api-container-content",markdown:"1"},(0,r.kt)("p",null,"The alpha channel or clut data. "))),(0,r.kt)(i.Z,{url:"structtouchgfx_1_1_texture_surface#variable-height",mdxType:"DoxybookHeaderLink"}),(0,r.kt)("h3",l({},{id:"height"}),"height"),(0,r.kt)("div",{class:"api-container",markdown:"1"},(0,r.kt)("div",{class:"api-container-header api-container-header-variable",markdown:"1"},(0,r.kt)("p",null,"int32_t height ")),(0,r.kt)("div",{class:"api-container-content",markdown:"1"},(0,r.kt)("p",null,"The height. "))),(0,r.kt)(i.Z,{url:"structtouchgfx_1_1_texture_surface#variable-stride",mdxType:"DoxybookHeaderLink"}),(0,r.kt)("h3",l({},{id:"stride"}),"stride"),(0,r.kt)("div",{class:"api-container",markdown:"1"},(0,r.kt)("div",{class:"api-container-header api-container-header-variable",markdown:"1"},(0,r.kt)("p",null,"int32_t stride ")),(0,r.kt)("div",{class:"api-container-content",markdown:"1"},(0,r.kt)("p",null,"The stride. "))),(0,r.kt)(i.Z,{url:"structtouchgfx_1_1_texture_surface#variable-width",mdxType:"DoxybookHeaderLink"}),(0,r.kt)("h3",l({},{id:"width"}),"width"),(0,r.kt)("div",{class:"api-container",markdown:"1"},(0,r.kt)("div",{class:"api-container-header api-container-header-variable",markdown:"1"},(0,r.kt)("p",null,"int32_t width ")),(0,r.kt)("div",{class:"api-container-content",markdown:"1"},(0,r.kt)("p",null,"The width. "))))}m.isMDXComponent=!0}}]);
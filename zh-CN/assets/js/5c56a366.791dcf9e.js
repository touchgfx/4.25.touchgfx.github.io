"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[84643],{49613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(59496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=d(n),u=i,h=s["".concat(c,".").concat(u)]||s[u]||m[u]||a;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},89639:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(59496),i=n(97395);const a=function(e){const t=e.noShadow||!1,n=e.width,a=e.height,o=(0,i.Z)(e.imageSource);return t?r.createElement("div",{className:"figure noshadow"},r.createElement("a",{href:o,target:"_blank"},r.createElement("img",{width:n,height:a,src:o})),r.createElement("p",null,e.children)):r.createElement("div",{className:"figure"},r.createElement("a",{href:o,target:"_blank"},r.createElement("img",{width:n,height:a,src:o})),r.createElement("p",null,e.children))}},48753:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(59496),i=n(96151);const a=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},r.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}));class o extends r.Component{render(){return r.createElement(i.Z,{color:"var(--highlight-color-further-reading)",header:"Further reading",type:"further-reading",icon:a},this.props.children)}}const l=o},96151:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(59496);class i extends r.Component{render(){const e=`highlight highlight-${this.props.type}`;return r.createElement("div",{className:e},r.createElement("div",{className:"highlight-heading"},r.createElement("h5",null,r.createElement("div",{className:"highlight-icon"},this.props.icon),this.props.header)),r.createElement("div",{className:"highlight-content"},this.props.children))}}const a=i},16765:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>g,frontMatter:()=>d,metadata:()=>s,toc:()=>u});n(59496);var r=n(49613),i=n(89639),a=n(48753),o=n(18399);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const d={id:"scenarios-dsi-video-mode",title:"MIPI-DSI\u89c6\u9891\u6a21\u5f0f"},p=void 0,s={unversionedId:"development/touchgfx-hal-development/scenarios/scenarios-dsi-video-mode",id:"development/touchgfx-hal-development/scenarios/scenarios-dsi-video-mode",title:"MIPI-DSI\u89c6\u9891\u6a21\u5f0f",description:"This scenario describes how to configure a STM32 DSIHOST in Video Mode and TouchGFX Generator when using a display with Display Serial Interface (DSI).",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/development/touchgfx-hal-development/scenarios/scenarios-dsi-video-mode.mdx",sourceDirName:"development/touchgfx-hal-development/scenarios",slug:"/development/touchgfx-hal-development/scenarios/scenarios-dsi-video-mode",permalink:"/4.25/zh-CN/docs/development/touchgfx-hal-development/scenarios/scenarios-dsi-video-mode",draft:!1,tags:[],version:"current",frontMatter:{id:"scenarios-dsi-video-mode",title:"MIPI-DSI\u89c6\u9891\u6a21\u5f0f"},sidebar:"docs",previous:{title:"LTDC Display Interface",permalink:"/4.25/zh-CN/docs/development/touchgfx-hal-development/scenarios/scenarios-ltdc-parallel-rgb"},next:{title:"FMC Display Interface",permalink:"/4.25/zh-CN/docs/development/touchgfx-hal-development/scenarios/scenarios-fmc"}},m={},u=[{value:"Configuration",id:"configuration",level:2},{value:"LTDC \u914d\u7f6e",id:"ltdc-\u914d\u7f6e",level:3},{value:"DSIHOST \u914d\u7f6e",id:"dsihost-\u914d\u7f6e",level:3},{value:"TouchGFX Generator",id:"touchgfx-generator",level:3},{value:"User Code",id:"user-code",level:2},{value:"DSIHOST / LTDC\u521d\u59cb\u5316\u987a\u5e8f",id:"dsihost-ltdc-initialization-sequence",level:3},{value:"\u66f4\u65b0\u4e86DSI\u89c6\u9891\u6a21\u5f0f\u7684TouchGFXHAL\u7c7b",id:"touchgfxhal-class-for-dsi-video-mode",level:3},{value:"Supported Framebuffer Strategies",id:"supported-framebuffer-strategies",level:2},{value:"Reference implementation",id:"reference-implementation",level:4}],h={toc:u},f="wrapper";function g(e){var{components:t}=e,n=c(e,["components"]);return(0,r.kt)(f,l({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This scenario describes how to configure a STM32 DSIHOST in Video Mode and ",(0,r.kt)("em",{parentName:"p"},"TouchGFX Generator")," when using a display with Display Serial Interface (DSI)."),(0,r.kt)("p",null,"The example used in this article will be for 24-bit RGB888 framebuffer format and goes through configurations in STM32CubeMX and exemplifies with generated code."),(0,r.kt)("h2",l({},{id:"configuration"}),"Configuration"),(0,r.kt)("h3",l({},{id:"ltdc-\u914d\u7f6e"}),"LTDC \u914d\u7f6e"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u6a21\u5f0f"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c06",(0,r.kt)("inlineCode",{parentName:"li"},"\u663e\u793a\u7c7b\u578b"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("em",{parentName:"li"},"RGB888\uff0824\u4f4d\uff09-DSI\u6a21\u5f0f")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u5c42\u8bbe\u7f6e"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c06",(0,r.kt)("inlineCode",{parentName:"li"},"\u5c42\u6570"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("em",{parentName:"li"},"1\u5c42")),(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e",(0,r.kt)("inlineCode",{parentName:"li"},"0\u5c42-\u50cf\u7d20\u683c\u5f0f"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("em",{parentName:"li"},"RGB888")),(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e",(0,r.kt)("inlineCode",{parentName:"li"},"0\u5c42- Alpha\u6df7\u5408\u5e38\u6570"),"\u4e3a",(0,r.kt)("em",{parentName:"li"},"255")," ",(0,r.kt)(i.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/dsi-video-mode/ltdc-config1.webp",width:"800",mdxType:"Figure"},"LTDC \u914d\u7f6e")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NVIC \u8bbe\u7f6e"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u542f\u7528LCD-TFT\u5168\u5c40\u4e2d\u65ad ",(0,r.kt)(i.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/dsi-video-mode/ltdc-config2.webp",width:"800",mdxType:"Figure"},"LTDC NVIC \u8bbe\u7f6e"))))),(0,r.kt)("h3",l({},{id:"dsihost-\u914d\u7f6e"}),"DSIHOST \u914d\u7f6e"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u6a21\u5f0f"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c06",(0,r.kt)("inlineCode",{parentName:"li"},"DSIHost"),"\u8bbe\u7f6e\u4e3a_*\u89c6\u9891\u6a21\u5f0f**"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u663e\u793a\u63a5\u53e3"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c06",(0,r.kt)("inlineCode",{parentName:"li"},"\u8272\u5f69\u683c\u5f0f"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("em",{parentName:"li"},"\u201cRGB888(24\u4f4d)- DSI\u6a21\u5f0f\u201d")),(0,r.kt)("li",{parentName:"ul"},"\u5176\u4f59\u914d\u7f6e\u53d6\u51b3\u4e8e\u6240\u9009\u7684LCD HW ",(0,r.kt)(i.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/dsi-video-mode/dsihost-config1.webp",width:"800",mdxType:"Figure"},"DSIHOST \u914d\u7f6e")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NVIC \u8bbe\u7f6e"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"DSIHOST\u65e0\u9700\u5168\u5c40\u4e2d\u65ad\uff0c\u5e94\u7981\u7528\u3002 ",(0,r.kt)(i.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/dsi-video-mode/dsihost-config2.webp",width:"800",mdxType:"Figure"},"DSIHOST NVIC \u8bbe\u7f6e"))))),(0,r.kt)("h3",l({},{id:"touchgfx-generator"}),"TouchGFX Generator"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u6a21\u5f0f"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u542f\u7528",(0,r.kt)("em",{parentName:"li"},"\u56fe\u5f62\u5e94\u7528\u7a0b\u5e8f")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"TouchGFX Generator"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c06",(0,r.kt)("inlineCode",{parentName:"li"},"\u663e\u793a/\u63a5\u53e3"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("em",{parentName:"li"},"\u5e76\u884cRGB\uff08LTDC\uff09"),"\uff0c\u56e0\u4e3a\u8fd9\u4ecd\u662f\u5e94\u7528\u7a0b\u5e8f\u4e0e\u4e4b\u901a\u4fe1\u7684\u63a7\u5236\u5668\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5c06",(0,r.kt)("inlineCode",{parentName:"li"},"\u5e94\u7528\u8ba1\u65f6\u6e90"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("em",{parentName:"li"},"LTDC")," ",(0,r.kt)(i.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/dsi-video-mode/touchgfx-generator-config.webp",width:"800",mdxType:"Figure"},"TouchGFX Generator\u914d\u7f6e"))))),(0,r.kt)("h2",l({},{id:"user-code"}),"User Code"),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"TouchGFX Generator")," can generate a ",(0,r.kt)("strong",{parentName:"p"},"full TouchGFX AL")," that configures the LTDC to transfer pixels through the DSI Host controller from the framebuffer memory to the display and synchronize the display with the TouchGFX Engine. Only minor adjustments may be required as described below."),(0,r.kt)("h3",l({},{id:"dsihost-ltdc-initialization-sequence"}),"DSIHOST / LTDC\u521d\u59cb\u5316\u987a\u5e8f"),(0,r.kt)("p",null,"\u5bf9",(0,r.kt)("inlineCode",{parentName:"p"},"MX_DSIHOST_DSI_Init()"),"\u7684\u8c03\u7528\u5fc5\u987b\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"MX_LTDC_Init()"),"\u4e4b\u524d\u5b8c\u6210\u3002 This should be handled by STM32CubeMX. If this is not correct, take care to fix the order in a user code section."),(0,r.kt)("p",null,"After calling ",(0,r.kt)("inlineCode",{parentName:"p"},"HAL_DSI_Start()"),", switch DSIHOST clock to the ",(0,r.kt)("inlineCode",{parentName:"p"},"DSIPHY")," source:"),(0,r.kt)("pre",null,(0,r.kt)("code",l({parentName:"pre"},{className:"language-cpp",metastring:"{12}","{12}":!0}),"static void MX_DSIHOST_DSI_Init(void)\n{\n  ...\n  /* Switch to DSI PHY PLL clock */\n  RCC_PeriphCLKInitTypeDef PeriphClkInit;\n  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_DSI;\n  PeriphClkInit.DsiClockSelection    = RCC_DSICLKSOURCE_DSIPHY;\n  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);\n  /* USER CODE END DSIHOST_Init 2 */\n  ...\n}\n")),(0,r.kt)("p",null,"\u7528\u6237\u5fc5\u987b\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"MX_LTDC_Init()"),"\u51fd\u6570\u7684\u672b\u5c3e\u6dfb\u52a0\u7279\u5b9a\u4e8e\u6240\u7528LCD\u63a7\u5236\u5668\u7684\u5fc5\u8981\u521d\u59cb\u5316\u4ee3\u7801\u3002 That code will be based on the DSI HAL APIs ",(0,r.kt)("inlineCode",{parentName:"p"},"HAL_DSI_ShortWrite()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"HAL_DSI_LongWrite()"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",l({parentName:"pre"},{className:"language-cpp"}),"  static void MX_LTDC_Init(void)\n  {\n    ...\n    /* USER CODE BEGIN LTDC_Init 2 */\n    // Specific LCD controller's initialization code\n    ...\n\n    // Exit Sleep Mode\n    if (HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P0, DSI_EXIT_SLEEP_MODE, 0x00) != HAL_OK)\n    {\n      Error_Handler();\n    }\n\n    HAL_Delay(120);\n    /* USER CODE END LTDC_Init 2 */\n    ...\n  }\n")),(0,r.kt)("h3",l({},{id:"touchgfxhal-class-for-dsi-video-mode"}),"\u66f4\u65b0\u4e86DSI\u89c6\u9891\u6a21\u5f0f\u7684TouchGFXHAL\u7c7b"),(0,r.kt)("p",null,"The generated code for the LTDC interrupt is identical to the code generated when using Parallel RGB display interface."),(0,r.kt)("p",null,"One way to prevent the MIPI DSI display from turning on until we've rendered the first frame in the application is to guard the function ",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXHAL::endFrame")," to keep the display off until first frame is rendered by TouchGFX. ",(0,r.kt)("inlineCode",{parentName:"p"},"TouchGFXHAL::endFrame()"),"\u53ef\u50cf\u4e0b\u9762\u8fd9\u6837\u66f4\u65b0\uff0c\u901a\u8fc7\u914d\u7f6e\u4e3aPWM\u8f93\u51fa\u7684HW\u5b9a\u65f6\u5668\u542f\u7528LCD\u53ca\u5176\u80cc\u5149\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",l({parentName:"pre"},{className:"language-cpp",metastring:"{7,9,11}","{7,9,11}":!0}),"void TouchGFXHAL::endFrame()\n{\n    if (!display_on)\n    {\n        display_on = true;\n        /* Enable the LCD, Send Display on DCS command to display */\n        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, DSI_SET_DISPLAY_ON, 0x00);\n        /* Start PWM Timer channel */\n        (void)HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_2);\n        /* Enable Backlight by setting Brightness to 100% */\n        __HAL_TIM_SET_COMPARE(&htim8, TIM_CHANNEL_2, 2U * 100);\n    }\n\n    TouchGFXGeneratedHAL::endFrame();\n}\n")),(0,r.kt)("h2",l({},{id:"supported-framebuffer-strategies"}),"Supported Framebuffer Strategies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Single"),(0,r.kt)("li",{parentName:"ul"},"Double"),(0,r.kt)("li",{parentName:"ul"},"Partial - LTDC driven display")),(0,r.kt)(a.Z,{mdxType:"FurtherReading"},"See article ",(0,r.kt)(o.Z,{to:"../../../basic-concepts/framebuffer#framebuffer-strategies",mdxType:"Link"},"Framebuffer Strategies")," for a general introduction to framebuffer strategies in TouchGFX."),(0,r.kt)("h4",l({},{id:"reference-implementation"}),"Reference implementation"),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"TouchGFX Board Setup")," STM32U5G9J DK1 includes a reference implementation running DSI Video Mode in RGB888 24-bit framebuffer format."),(0,r.kt)(i.Z,{imageSource:"/img/development/touchgfx-hal-development/scenarios/stm32u5g9-dk1.png",width:"200",mdxType:"Figure"}),(0,r.kt)(a.Z,{mdxType:"FurtherReading"},"See article ",(0,r.kt)(o.Z,{to:"scenarios-ltdc-parallel-rgb#supported-framebuffer-strategies",mdxType:"Link"},"LTDC Display Interface")," for more information about the generated TouchGFX AL compatible with DSI Video mode with LTDC."))}g.isMDXComponent=!0}}]);